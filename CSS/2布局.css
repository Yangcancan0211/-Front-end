/* 
布局：
     1.标准流：从左到右，从上到下按顺序排好，元素之前不会层叠
     (1)margin/padding:用来调整元素之间的位置，但会影响其他的元素
定位:从正到右，从上到下按顺序摆放 默认情况下，互相不存在层叠现象
     2.position:使元素脱离标准流
        子绝父相
        static:默认值，静态定位 left/right/top/bottom不起作用 不会脱标
        relative:相对定位 在不影响其他元素的情况下，设置left/right/top/bottom相对于自己原来的位置进行调整 不会脱标
        absolute:绝对定位 定位参照对象是最邻近的祖先的定位元素元素，找不到时参照视口 会脱标
        fixed:固定定位 可以通过left/right/top/bottom进行定位 参照对象是视口(可视区域) 当画布(用于渲染文档的区域)滚动时，不滚动 会脱标
        sticky:粘性定位 可以看作相对定位和(固定)绝对定位的结合体 必须设置滚动时的值 相对于临近的祖先元素黏住
     特点:1.设置成absolute/fixed:(1)可以随意设置宽高 默认宽高由内容决定 不再受标准流控制(不会按顺序进行布局 不区分行内级或块级元素) 不再给父元素汇报宽高
        (2)定位参照对象的宽度=left+right+margin-left+margin-right+绝对定位元素的实际占用宽度
           定位参照对象的高度=top+bottom+margin-top+margin-bottom+绝对定位元素的实际占用高度
           希望绝对定位元素的宽高和定位参照对象一样，可以给绝对定位元素设置：left0、right0、top0、bottom0、margin:0
           希望绝对定位元素在定位参照对象中居中显示，可以设置:left0、right0、top0、bottom0、margin:auto 还要设置具体宽高值(小于参照对象的宽高)
      3.z-index:用来设置定位元素的层叠顺序(仅对定位元素有效 正值/负值/0都可以设置) 
         比较关系:(1)兄弟关系:z-index越大，层叠越上面，相等时，写在后面的那个元素叠在上面
                 (2)不是兄弟关系:各自从元素自己以及祖先元素中，找到最临近的两个定位元素进行比较(而且这两个定位元素必须有设置z-index具体的值)
浮动: 1.可以指定一个元素沿着其容器的左侧或右侧放置，允许文本和内联元素环绕它 可以让元素脱标
      2.元素向右/左移动时，不能超过包含块的位置 
      3.浮动元素之间不能层叠:如果一个元素浮动，另一个浮动元素已经在那个位置了，后浮动的元素将紧贴前一个浮动元素 水平空间不够容纳浮动元素，将向下移动
      4.浮动元素不能和行内级内容重叠，行内级内容将会被浮动元素推出(图文环绕)
      5.行内级元素、inline-block元素浮动后，其顶部将与所在行的顶部对齐
      6.行内元素的间距处理:
   水平间距问题(将多个行内级元素中间的空格(间隙)去除的方法):(1)删除换行符(2)将父元素的font-size设置为0，但子元素要设置回来(3)统一向一个方向设置浮动(4)flex
      (1)none:不浮动，默认值
      (2)left:向左浮动
      (3)right:向右浮动
      7.浮动的问题——高度塌陷:因为浮动元素脱标，所以不会向父元素汇报高度
      (1)给父元素设置固定高度
      (2)在父元素最后添加一个空的块级子元素，并设置clear：both
      (3)给父元素添加伪元素清除浮动
      CSS样式:.clear-fix::after{
                                content:"";
                                display:block;变成块级元素，才能清除浮动
                                clear:both;
                                visibility:hidden;浏览器兼容
                                height:0;}浏览器兼容，必须设置高度
            .clear-fix{*zoom:1;} *IE6/7兼容
      清除浮动clear:left 要求元素的底部低于之前生成的所有左浮动元素的底部
                   right 要求元素的底部低于之前生成的所有右浮动元素的底部
                   both 要求元素的底部低于之前生成的所有浮动元素的底部
                   none 默认值，无要求
flex布局:1.flexbox弹性盒子:用于按行或按列布局元素的一维布局方法、元素可以膨胀以填充额外的空间，收缩以适应更小的空间
         2.display:可以设置flex(flex container以block-level形式存在)/inline-flex(以inline-level存在)/flex container
         3.flex container:
         (1)flex-flow:flex-direction和flex-wrap的简写属性，顺序任何并且可以省略
         (2)flex-direction:决定main asix方向 row(默认值，向右)/row-reverse(主轴反转，向左)/column(让列成主轴，向下)/column-reverse(列反转成主轴，向上)
         (3)flex-wrap:决定flex container是单行还是多行 nowrap(默认值单行，不换行)/wrap(多行)/warp-reverse(多行，对比wrap，cross start与cross end相反)
         (4)justify-content:调整内容 flex-start(默认值)与main start对齐 flex-end与main end对齐 center居中对齐 
          space-betweed:flex items之间的值相等 与main start、main end两端对齐 两端没有距离
          space-around:flex items之间的值相等 flex items与main start、main end之间的距离是flex items之间距离的一半 两端的距离等于中间的一半
          space-evenly:flex items之间的值相等 flex items与main start、main end之间的距离等于flex items之间的距离（四等分间距）两端也有距离
          !!!布局时解决最后一行对齐问题 1.加span/i（个数为列数减2）2.计算用margin解决
         (5)align-items:决定flex items在cross axis上的对齐方式 flex-start与cross start对齐 flex-end与cross end对齐 center居中对齐 
         normal:在弹性布局中，效果与stretch一样 stretch:当flex items在cross axis方向的size为auto时，自动拉伸至填充flex container
         beseline:与基准线对齐
         (6)align-content:决定多行flex items与cross axis的对齐方式 固定高度才会使用
          strettch:(默认值) flex-start与cross start对齐 flex-end与cross end对齐 center居中对齐 
          space-betweed:flex items之间的值相等 与cross start、cross end两端对齐 两端没有距离
          space-around:flex items之间的值相等 flex items与cross start、cross end之间的距离是flex items之间距离的一半 两端的距离等于中间的一半
          space-evenly:flex items之间的值相等 flex items与cross start、cross end之间的距离等于flex items之间的距离（四等分间距）两端也有距离
         4.flex item(直接子元素):(1)将受flex container的控制(2)不再区分块级和行内级元素(3)默认情况下包裹内容，但可以设置宽高
         (1)flex-grow（拉伸）:默认值为0 设置值来拉伸元素 当main axis方向上有剩余空间，flex-grow才会生效
         (2)flex-basis:基础尺寸,默认值auto
         (3)flex-shrink（缩小）:默认值为1 设置值来缩小元素 当flex items在main axis方向上超过flex container的size，flex-shrink才会生效
         (4)order:决定flex items的排布顺序，默认值为0，值越小，越靠前排布
         (5)align-self:可以覆盖flex container设置的align-items
         默认值auto 遵从flex container的align-items 其他值和align-items一样，效果一致
         (6)flex:flex-grow/flex-shrink/flex-basis的简写，可以指定一个，两个或三个值

 */